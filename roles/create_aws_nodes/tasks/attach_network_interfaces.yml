---
- set_fact: 
    network_interface: "{{ item }}"

- block:
  - ec2_vpc_subnet_facts:
      filters:
        "tag:Name": "{{ network_interface.subnet }}"
    register: subnets

  - set_fact:
      subnet_id: "{{ subnets.subnets[0].id }}"

  - ec2_eni:
      private_ip_address: "{{ network_interface.private_ip_address }}"
      description: "{{ node.name }} network port"
      subnet_id: "{{ subnet_id }}"
      security_groups: "{{ node.security_group }}"
      region: "{{ region }}"
      state: present
    register: interface

  - debug:
      msg: "{{ interface }}"

  - ec2_eip:
      in_vpc: yes
      state: present
      region: "{{ region }}"
      device_id: "{{ interface.interface.id }}"
    when: network_interface.subnet == "management_network"
    register: elastic_ip

  - ec2_tag:
      region: "{{ region }}"
      resource: "{{ elastic_ip.allocation_id }}"
      state: present
      tags:
        Name: "{{ node.name }} management network elastic IP"
    when: network_interface.subnet == "management_network"

  - set_fact:
      interface_ids: "{{ interface_ids }} + [ '{{ interface.interface.id }}' ] "

  - set_fact:
      elastic_ips: "{{ elastic_ips }} + [ '{{ elastic_ip }}' ] "

  environment:
    AWS_SECRET_ACCESS_KEY: "{{ assumed_role.sts_creds.secret_key }}"
    AWS_ACCESS_KEY_ID: "{{ assumed_role.sts_creds.access_key }}"
    AWS_SESSION_TOKEN: "{{ assumed_role.sts_creds.session_token }}"
