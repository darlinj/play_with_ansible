---
- block:
  - name: Create VPC
    ec2_vpc_net:
      name:             "{{ vpc_name }}"
      cidr_block:       "{{ vpc_cidr_block }}"
      region:           "{{ region }}"
      state:            "present"
    register: vpc

  - name: Set VPC ID in variable
    set_fact:
      vpc_id:           "{{ vpc.vpc.id }}"
  
  - name: Create Public Subnet
    ec2_vpc_subnet:
      state:            "present"
      vpc_id:           "{{ vpc_id }}"
      cidr:             "{{ public_subnet_1_cidr }}"
      az:               "{{ region }}a"
      region:           "{{ region }}"
      resource_tags:
        Name:           "Public Subnet"
    register: public_subnet
  
  - name: Set Public Subnet ID in variable
    set_fact:
      public_subnet_id: "{{ public_subnet.subnet.id }}"
  
  - name: Create Internet Gateway for VPC
    ec2_vpc_igw:
      vpc_id:           "{{ vpc_id }}"
      region:           "{{ region }}"
      state:            "present"
    register: vpc_igw
  
  - name: Set Internet Gateway ID in variable
    set_fact:
      igw_id:           "{{ vpc_igw.gateway_id }}"
  
  - name: Set up public subnet route table
    ec2_vpc_route_table:
      vpc_id: "{{ vpc_id }}"
      region: "{{ region }}"
      tags:
        Name: "Public"
      subnets:
        - "{{ public_subnet_id }}"
      routes:
        - dest: "0.0.0.0/0"
          gateway_id: "{{ igw_id }}"

  - name: Create a security group
    local_action: 
      module: ec2_group
      name: "{{ security_group_name }}"
      description: Auto deployed security group
      vpc_id: "{{ vpc_id }}"
      region: "{{ region }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0
    register: basic_firewall
  
  environment:
    AWS_SECRET_ACCESS_KEY: "{{ assumed_role.sts_creds.secret_key }}"
    AWS_ACCESS_KEY_ID: "{{ assumed_role.sts_creds.access_key }}"
    AWS_SESSION_TOKEN: "{{ assumed_role.sts_creds.session_token }}"
